# Time Complexity - o(n)
# Space Complexity - o(n)
class Solution:
    def calculate(self, s: str) -> int:
        stack=[]
        lastSign='+'
        num=0
        sum=0
        for i in range(len(s)):
            if s[i].isdigit():
                num=num*10+int(s[i])
            if not (s[i].isdigit()) and s[i] != " " or i == len(s) - 1:
                if(lastSign=='+'):
                    stack.append(+num)
                elif(lastSign=='-'):
                    stack.append(-num)
                elif(lastSign=='*'):
                    stack.append(stack.pop()*num)
                elif(lastSign=='/'):
                    temp=stack.pop()
                    if(temp<0):
                        temp=-1*temp
                        val=temp//num
                        stack.append(-val)
                    else:
                        stack.append(temp//num)
                lastSign=s[i]
                num=0
        while stack:
            sum+=stack.pop()
        return sum
